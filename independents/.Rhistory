gam <- gam(G3 ~ sex, age, Medu, Fedu, studytime, failures, schoolsup, famsup, higher)
library(gam)
gam <- gam(G3 ~ sex, age, Medu, Fedu, studytime, failures, schoolsup, famsup, higher)
Language <- read.csv("https://courseworks.columbia.edu/x/iX6mmf", sep = ";")
gam <- gam(G3 ~ sex, age, Medu, Fedu, studytime, failures, schoolsup, famsup, higher, data = Language)
View(Language)
gam <- gam(G3 ~ sex + age + Medu + Fedu + studytime + failures + schoolsup + famsup + higher, data = Language)
inputs <- Language[, inputColumns(gam)]
library(RSNNS)
inputs <- Language[, inputColumns(gam)]
targets <- Language[, outputColumns(gam)]
Math <- read.csv("https://courseworks.columbia.edu/x/ir2NNs", sep = ";")
nnmodel <- elman(inputs, targets,
maxit = 50,
linOut = FALSE)
inputs <- Language[, inputColumns(model.matrix(gam))]
targets <- Language[, outputColumns(model.matrix(gam))]
nnmodel <- elman(inputs, targets,
maxit = 50,
linOut = FALSE)
gam <- model.matrix(gam(G3 ~ sex + age + Medu + Fedu + studytime + failures + schoolsup + famsup + higher, data = Language))
inputs <- Language[, inputColumns(gam)]
targets <- Language[, outputColumns(gam)]
nnmodel <- elman(inputs, targets,
size = 5, maxit = 100,
linOut = FALSE)
View(inputs)
View(targets)
input_L <- scale(model.matrix(inputColumns(gam)))
input_L <- scale(model.matrix(gam))
is.vector(gam)
is.matrix(gam)
input_L <- inputColumns(gam)
is.matrix(input_L)
output_L <- scale(model.matrix(Language$G3))
input_L <- scale(gam)
View(input_L)
output_L <- scale(Language$G3)
View(output_L)
nnmodel <- elman(input_L, output_L,
size = 5, maxit = 100,
linOut = FALSE)
input_L <- scale(gam, na.rm=TRUE)
library(bartMachine)
model.matrix(gam)
class(gam)
input_L <- model.matrix(gam)
gam <- model.matrix(gam(G3 ~ sex + age + Medu + Fedu + studytime + failures + schoolsup + famsup + higher, data = Language))
gam <- gam(G3 ~ sex + age + Medu + Fedu + studytime + failures + schoolsup + famsup + higher, data = Language)
is.matrix(gam)
gam <- model.matrix(gam(G3 ~ sex + age + Medu + Fedu + studytime + failures + schoolsup + famsup + higher, data = Language))
(
gam <- model.matrix(gam)
gam <- model.matrix(gam)
input_L <- Language$G3[, inputColumns(gam)]
input_L <- gam[, inputColumns(gam)]
bart <- bartMachine(X = Language[, c("sex", "age", "Medu", "Fedu")], y = Language$G3)
bart
predictions <- predict(bart, new_data = Math[, c("sex", "age", "Medu", "Fedu"), type = "class"])
predictions <- predict(bart, new_data = Math[, c("sex", "age", "Medu", "Fedu"), type = "response"])
predictions <- predict(bart, new_data = Math[, c("sex", "age", "Medu", "Fedu")])
table(Math$G3, predictions)
View(Math)
?predict
?predict.bartMachine
View(input_L)
input_L <- scale(model.matrix(gam, -1))
Language <- read.csv("https://courseworks.columbia.edu/x/iX6mmf", sep = ";")
library(RSNNS)
library(gam)
gam <- gam(G3 ~ sex + age + Medu + Fedu + studytime + failures + schoolsup + famsup + higher, data = Language)
gam <- model.matrix(gam)
input_L <- scale(model.matrix(gam, -1))
input_L <- scale(model.matrix(gam)[, -1])
library(devtools)
library(QMSS)
library(ggplot2)
library(plyr)
library(car)
library(fUnitRoots)
GSS = read.csv(file.choose()) ## choose the GSS Trends file.  ##
vars <- c("year", "partyid", "trust", "sex", "age", "educ")
sub <- GSS[, vars]
sub <- mutate(sub,
independent = ifelse(partyid == 3, 1, 0),
ntrust = ifelse(trust == 1, 1, 0),
female = ifelse(sex == 2, 1, 0))
by.year <- aggregate(subset(sub, sel = -year), list(year = sub$year), mean, na.rm = T)
by.year[30:40, "year"] <- c(1979, 1981, 1992, 1995, seq(1997, 2009, 2))
by.year <- arrange(by.year, year)
by.year.ts <- ts(by.year)
by.year.ts <- na.approx(by.year.ts)
by.year.ts <- as.data.frame(by.year.ts)
by.year.ts <- mutate(by.year.ts,
ind_pct = independent*100,
trust_pct = ntrust*100)
library(reshape2)
keep.vars <- c("year", "mod_pct", "trust_pct", "female", "age", "educ")
plot.dat <- meltMyTS(mv.ts.object = by.year.ts, time.var = "year", keep.vars = keep.vars)
keep.vars
keep.vars <- c("year", "ind_pct", "trust_pct", "female", "age", "educ")
plot.dat <- meltMyTS(mv.ts.object = by.year.ts, time.var = "year", keep.vars = keep.vars)
plot.dat
(g_trust <- ggMyTS(df = plot.dat, varlist = c("trust_pct")))
(g_cons <- ggMyTS(df = plot.dat, varlist = c("ind_pct")))
(g_ind <- ggMyTS(df = plot.dat, varlist = c("ind_pct")))
(g_trust <- ggMyTS(df = plot.dat, varlist = c("trust_pct")))
(g_educ <- ggMyTS(df = plot.dat, varlist = c("educ")))
(g_age <- ggMyTS(df = plot.dat, varlist = c("age")))
(g_female <- ggMyTS(df = plot.dat, varlist = c("female")))
(g_age <- ggMyTS(df = plot.dat, varlist = c("age")))
(g_female <- ggMyTS(df = plot.dat, varlist = c("female")))
lm.ind <- lm(ind_pct ~ trust_pct, data = by.year.ts)
summary(lm.ind)
summary(by.year.ts$trust_pct)
lm.ind2 <- update(lm.ind, ~ . + year)
summary(lm.cons2)
lm.ind2 <- update(lm.ind, ~ . + year)
summary(lm.ind2)
bptest(lm.ind)
?bptest
vif(lm.ind2)
e2 <- lm.cons2$resid
e2 <- lm.ind2$resid
acf(e2, xlim = c(1,8), col = "red", lwd = 2)
?acf
pacf(e2, xlim = c(1,8), col = "red", lwd = 2)
plot(e2)
plot(e2)
dwtest(lm.cons2)
plot(e2)
dwtest(lm.ind2)
?dwtest
bgtest(lm.ind2)
durbinWatsonTest(lm.ind2, max.lag=3)
?durbinWatsonTest
bgtest(lm.ind2)
durbinWatsonTest(lm.ind2, max.lag=3)
lm.ind3 <- update(lm.ind2, ~ . + female + age + educ)
summary(lm.ind3)
lm.ind3 <- update(lm.ind2, ~ . + age + educ)
summary(lm.ind3)
lm.ind3 <- update(lm.ind2, ~ . + female + age + educ)
summary(lm.ind3)
options(scipen = 999)
lm.ind3 <- update(lm.ind2, ~ . + female + age + educ)
summary(lm.ind3)
vif(lm.ind3) # variance inflation factor
lm.ind4 <- update(lm.ind2, ~ . + female + age)
summary(lm.ind4)
vif(lm.ind4)
durbinWatsonTest(lm.ind3, max.lag=3)
durbinWatsonTest(lm.ind4, max.lag=3)
vif(lm.ind4)
summary(lm.ind4)
durbinWatsonTest(lm.ind4, max.lag=3)
by.yearFD <- summarise(data.frame(by.year.ts),
ind_pct = firstD(ind_pct),
trust_pct = firstD(trust_pct),
age = firstD(age),
educ = firstD(educ),
female = firstD(female),
year = year)
lm.ind5 <- update(lm.ind4, data = by.yearFD)
summary(lm.ind5)
lm.ind5 <- update(lm.ind2, data = by.yearFD)
summary(lm.ind5)
e4 <- lm.ind5$resid
acf(e4, xlim = c(1,6), col = "red", lwd = 2)
pacf(e4, xlim = c(1,6), col = "red", lwd = 2)
durbinWatsonTest(lm.ind5, max.lag=3)
library(fUnitRoots)
adfTest(by.year.ts[,"ind_pct"], lags = 0, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 3, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 5, type="ct")
adfTest(by.year.ts[,"trust_pct"], lags = 0, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 0, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 0, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 5, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 8, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 6, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 8, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 7, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 9, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 10, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 15, type="ct")
PP.test(by.year.ts[,"ind_pct"],lshort=TRUE)
adfTest(by.year.ts[,"ind_pct"], lags = 3, type="ct")
adfTest(by.year.ts[,"ind_pct"], lags = 3, type="ct")
adfTest(by.year.ts[,"trust_pct"], lags = 0, type="ct")
PP.test(by.year.ts[,"trust_pct"],lshort=TRUE)
library(forecast)
auto.arima(e2, trace=TRUE)
xvars <- by.year.ts[,c("trust_pct", "year")]
arima.100 <- arima(by.year.ts[,"ind_pct"], order = c(1,0,0), xreg = xvars)
summary(arima.100)
Box.test(resid(arima.100), lag = 20, type = c("Ljung-Box"), fitdf = 0)
?Box.test
pan = read.csv(file.choose()) ## GSS Panel Data ##
head(pan)
View(pan)
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "educ", "region", "marital", "race", "attend", "babies", "preteen", "teens")
sub <- pan[, vars]
sub$m = ifelse(sub$marital==1,1,0)
sub$kidslt18 = sub$babies + sub$preteen + sub$teens
sub$drop = ifelse(sub$m==1 &  sub$panelwave==1, 1,0)
sub = merge(sub, aggregate(drop ~ idnum, data=sub, mean), by="idnum", suffixes=c("", ".all"))
subpt = subset (sub, sub$drop.all==0)
subpt$nyear = subpt$year-2006
subpt$ytwo = ifelse(subpt$m==1 & subpt$panelwave==2, 2, 0)
subpt = merge(subpt, aggregate(ytwo ~ idnum, data=subpt, max), by="idnum", suffixes=c("", ".two"))
subpt$ythree = ifelse(subpt$m==1 & subpt$panelwave==3, 3, 0)
subpt = merge(subpt, aggregate(ythree ~ idnum, data=subpt, max), by="idnum", suffixes=c("", ".three"))
subpt$combo <- do.call(paste, c(subpt[c("ytwo.two", "ythree.three")], sep = ""))
table(subpt$combo)
subpt$m[subpt$combo=="20" & subpt$year==2010] <- NA
subpt$m[subpt$combo=="23" & subpt$year==2010] <- NA
summary(glm(m ~ as.factor(nyear), subpt, family="binomial", subset = subpt$year>2006))
summary(glm(m ~ as.factor(nyear) + sex + educ + age + as.factor(race) + attend + kidslt18, subpt, family="binomial", subset = subpt$year>2006))
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "educ", "marital", "race", "realincome")
sub <- pan[, vars]
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "educ", "marital", "race", "realinc")
sub <- pan[, vars]
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "educ", "region", "marital", "race", "attend", "babies", "preteen", "teens")
sub <- pan[, vars]
sub$m = ifelse(sub$marital==1,1,0)
sub$kidslt18 = sub$babies + sub$preteen + sub$teens
sub$drop = ifelse(sub$m==1 &  sub$panelwave==1, 1,0)
sub = merge(sub, aggregate(drop ~ idnum, data=sub, mean), by="idnum", suffixes=c("", ".all"))
subpt = subset (sub, sub$drop.all==0)
subpt$nyear = subpt$year-2006
subpt$ytwo = ifelse(subpt$m==1 & subpt$panelwave==2, 2, 0)
subpt = merge(subpt, aggregate(ytwo ~ idnum, data=subpt, max), by="idnum", suffixes=c("", ".two"))
subpt$ythree = ifelse(subpt$m==1 & subpt$panelwave==3, 3, 0)
subpt = merge(subpt, aggregate(ythree ~ idnum, data=subpt, max), by="idnum", suffixes=c("", ".three"))
subpt$combo <- do.call(paste, c(subpt[c("ytwo.two", "ythree.three")], sep = ""))
table(subpt$combo)
summary(glm(m ~ as.factor(nyear), subpt, family="binomial", subset = subpt$year>2006))
subpt$everm = ifelse((subpt$marital>1 & subpt$marital<5 & subpt$panelwave==1), 1,0)
subpt = merge(subpt, aggregate( everm ~ idnum, data=subpt, max), by="idnum", suffixes=c("", ".all"))
summary(glm(m ~ as.factor(nyear) + sex + educ + age + as.factor(race) + attend + kidslt18 + everm.all, subpt, family="binomial", subset = subpt$year>2006))
table(subpt$combo)
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "educ", "marital", "race", "realinc")
sub <- pan[, vars]
sub$fired = ifelse(sub$wrkstat==4,1,0)
sub$drop = ifelse(sub$fired==1 &  sub$panelwave==1, 1,0)
sub = merge(sub, aggregate(drop ~ idnum, data=sub, mean), by="idnum", suffixes=c("", ".all"))
subpt = subset (sub, sub$drop.all==0)
subpt$nyear = subpt$year-2006
subpt$ytwo = ifelse(subpt$fired==1 & subpt$panelwave==2, 2, 0)
subpt = merge(subpt, aggregate(ytwo ~ idnum, data=subpt, max), by="idnum", suffixes=c("", ".two"))
subpt$ythree = ifelse(subpt$fired==1 & subpt$panelwave==3, 3, 0)
subpt = merge(subpt, aggregate(ythree ~ idnum, data=subpt, max), by="idnum", suffixes=c("", ".three"))
subpt$combo <- do.call(paste, c(subpt[c("ytwo.two", "ythree.three")], sep = ""))
table(subpt$combo)
table(subpt$combo)
subpt$fired[subpt$combo=="20" & subpt$year==2010] <- NA
subpt$m[subpt$combo=="23" & subpt$year==2010] <- NA
summary(glm(fired ~ as.factor(nyear), subpt, family="binomial", subset = subpt$year>2006))
summary(nyear)
summary(subpt$nyear)
summary(glm(fired ~ as.factor(nyear) + sex + educ + age + as.factor(race) + realinc, subpt, family="binomial", subset = subpt$year>2006))
glm1 <- glm(fired ~ as.factor(nyear), subpt, family="binomial", subset = subpt$year>2006)
summary(glm1)
glm2 <- glm(fired ~ as.factor(nyear) + sex + educ + age + as.factor(race) + realinc, subpt, family="binomial", subset = subpt$year>2006)
summary(glm2)
glm2 <- glm(fired ~ as.factor(nyear) + age + educ + realinc + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006)
summary(glm2)
glm2 <- glm(fired ~ as.factor(nyear) + age + educ + log(realinc) + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006)
summary(glm2)
summary(subpt$realinc)
glm3 <- glm(fired ~ as.factor(nyear) + age + educ + log(realinc) + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006 & subpt$realinc<100000)
summary(glm3)
glm3 <- glm(fired ~ as.factor(nyear) + age + educ + log(realinc) + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006 & subpt$realinc<75000)
summary(glm3)
glm3 <- glm(fired ~ as.factor(nyear) + age + educ + log(realinc) + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006 & subpt$realinc<50000)
summary(glm3)
glm4 <- glm(fired ~ as.factor(nyear) + age + I(age)^2 + educ + log(realinc) + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006 & subpt$realinc<50000)
summary(glm4)
glm4 <- glm(fired ~ as.factor(nyear) + age + I(age^2) + educ + log(realinc) + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006 & subpt$realinc<50000)
summary(glm4)
glm4 <- glm(fired ~ as.factor(nyear) + age + I(age^2) + educ + log(realinc) + as.factor(race) + sex, subpt, family="binomial", subset = subpt$year>2006 & subpt$realinc<50000)
summary(glm4)
sub$working = ifelse(sub$wrkstat==1 & 2, 1,0)
sub$drop = ifelse(sub$fired==1 &  sub$panelwave==1, 1,0)
sub = merge(sub, aggregate(drop ~ idnum, data=sub, mean), by="idnum", suffixes=c("", ".all"))
subpt = subset (sub, sub$drop.all==0)
pan = read.csv(file.choose()) ## GSS Panel Data ##
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "educ", "marital", "race", "realinc")
sub <- pan[, vars]
sub$fired = ifelse(sub$wrkstat==4,1,0)
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "educ", "race", "realinc")
sub <- pan[, vars]
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "race", "realinc")
sub <- pan[, vars]
vars
pan = read.csv(file.choose()) ## GSS Panel Data ##
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "race", "realinc")
sub <- pan[, vars]
vars <- c("age", "year", "sex", "idnum", "panelwave", "wrkstat", "race")
sub <- pan[, vars]
vars <- c("year", "sex", "idnum", "panelwave", "wrkstat", "race", "realinc")
sub <- pan[, vars]
library(devtools)
library(QMSS)
library(ggplot2)
library(plyr)
library(car)
library(fUnitRoots)
setwd("~/Desktop/portfolio/rise_independents")
setwd("~/Desktop/portfolio/independents")
setwd("~/Desktop/independents")
setwd("~/Desktop/independents")
GSS <- read.csv("trends-gss.csv")
vars <- c("year", "partyid", "trust", "sex", "age")
sub <- GSS[, vars]
sub <- mutate(sub,
independent = ifelse(partyid == 3, 1, 0),
ntrust = ifelse(trust == 1, 1, 0),
female = ifelse(sex == 2, 1, 0))
